{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "NSQL",
  "patterns": [
    { "include": "#comments" },
    { "include": "#statement-terminator" },
    { "include": "#query-keywords" },
    { "include": "#clause-keywords" },
    { "include": "#conditional-keywords" },
    { "include": "#action-keywords" },
    { "include": "#graph-keywords" },
    { "include": "#literal-keywords" },
    { "include": "#constraint-keywords" },
    { "include": "#operators" },
    { "include": "#punctuation" },
    { "include": "#strings" },
    { "include": "#numbers" },
    { "include": "#aggregate-functions" },
    { "include": "#data-types" },
    { "include": "#constants" },
    { "include": "#identifiers" }
  ],
  "repository": {
    "comments": {
      "name": "comment.line.double-greater-than.nsql",
      "match": ">>.*$"
    },
    "statement-terminator": {
      "name": "punctuation.terminator.statement.nsql",
      "match": "\\bPLEASE\\b|;"
    },
    "query-keywords": {
      "name": "keyword.control.query.nsql",
      "match": "\\b(ASK|TELL|FIND|SHOW|GET|HOW)\\b"
    },
    "clause-keywords": {
      "name": "keyword.control.clause.nsql",
      "match": "\\b(FOR|TO|IN|FROM|GROUP|HAVING|SORT|ORDER|BY|LIMIT|OFFSET|AS|WITH|VIA|MANY)\\b"
    },
    "conditional-keywords": {
      "name": "keyword.control.conditional.nsql",
      "match": "\\b(WHERE|THAT|WHICH|IF|WHEN|AND|OR|NOT|BETWEEN|EXISTS|HAS|PATH|HAVE|ARE|BUT)\\b"
    },
    "action-keywords": {
      "name": "keyword.control.action.nsql",
      "match": "\\b(ADD|REMOVE|UPDATE|CREATE)\\b"
    },
    "graph-keywords": {
      "name": "keyword.control.graph.nsql",
      "match": "\\b(TRAVERSE|DEPTH|MAX|HOPS|NODES|EDGES|ID)\\b"
    },
    "literal-keywords": {
      "name": "keyword.control.literal.nsql",
      "match": "\\b(MAP|GRAPH|DATE|TIMESTAMP)\\b"
    },
    "constraint-keywords": {
      "name": "keyword.control.constraint.nsql",
      "match": "\\b(REQUIRED|UNIQUE|DEFAULT)\\b"
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.comparison.nsql",
          "match": "(=|>|<|>=|<=|!=|\\bLIKE\\b)"
        },
        {
          "name": "keyword.operator.logical.nsql",
          "match": "\\b(AND|OR|NOT|BUT)\\b"
        },
        {
          "name": "keyword.operator.arithmetic.nsql",
          "match": "(\\+|-|\\*|/|%)"
        }
      ]
    },
    "punctuation": {
      "patterns": [
        {
          "name": "punctuation.separator.nsql",
          "match": "(\\.|,|:)"
        },
        {
          "name": "punctuation.definition.bracket.curly.nsql",
          "match": "(\\{|\\})"
        },
        {
          "name": "punctuation.definition.bracket.square.nsql",
          "match": "(\\[|\\])"
        },
        {
          "name": "punctuation.definition.bracket.round.nsql",
          "match": "(\\()|(\\))"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.nsql",
          "begin": "\"",
          "end": "\"",
          "escape": "\\\\",
          "patterns": [
            { "name": "constant.character.escape.nsql", "match": "\\\\." }
          ]
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.decimal.nsql",
          "match": "\\b\\d+\\.\\d+([FDM])?\\b"
        },
        {
          "name": "constant.numeric.integer.nsql",
          "match": "\\b\\d+\\b"
        }
      ]
    },
    "aggregate-functions": {
      "name": "support.function.aggregate.nsql",
      "match": "\\b(SUM|AVG|COUNT|MIN|MAX)\\b"
    },
    "data-types": {
      "name": "storage.type.nsql",
      "match": "\\b(INTEGER|INT|DOUBLE|FLOAT|DECIMAL|JSONB|DATETIME|TIMESTAMP|VARCHAR|STRING|TEXT|MAP|GRAPH|BOOLEAN|BOOL|LIST|ARRAY)\\b"
    },
    "constants": {
      "name": "constant.language.nsql",
      "match": "\\b(TRUE|FALSE|NULL|NOW)\\b"
    },
    "identifiers": {
      "match": "\\b([A-Za-z_][A-Za-z0-9_]*)\\b",
      "captures": {
        "1": {
          "patterns": [
            {
              "match": "\\b(ASC|DESC)\\b",
              "name": "keyword.control.sort-direction.nsql"
            },
            {
              "match": "\\b[A-Za-z_][A-Za-z0-9_]*\\b",
              "name": "variable.other.nsql"
            }
          ]
        }
      }
    }
  },
  "scopeName": "source.nsql"
}